plugins {
    id "eclipse"
    id "idea"
    id "io.sdkman.vendors"              version "1.1.1"     apply false
    id "com.jfrog.bintray"              version "1.7.3"     apply false
    id "com.github.kt3k.coveralls"      version "2.8.1"     apply false
    id 'com.github.ben-manes.versions'  version '0.15.0'
}

ext {
    asciidoctorjVersion = '1.5.6'
    asciidoctorjDiagramVersion = '1.5.4.1'
    commonsIoVersion = '2.5'
    commonsConfigurationVersion = '1.10'
    commonsLangVersion = '3.6'
    commonsVfs2Version = '2.1'
    args4jVersion = '2.33'
    freemarkerVersion = '2.3.26-incubating'
    junit4Version = '4.12'
    flexmarkVersion = '0.27.0'
    jettyServerVersion = '9.2.22.v20170606'
    orientDbVersion = '2.2.28'
    groovyVersion = '2.4.12'
    slf4jVersion = '1.7.25'
    logbackVersion = '1.2.3'
    assertjCoreVersion = '2.8.0'
    thymeleafVersion = '3.0.7.RELEASE'
    jsonSimpleVersion = '1.1.1'
    jade4jVersion = '1.2.5'
    mockitoVersion = '2.10.0'
    jsoupVersion = '1.10.3'
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'jacoco'

    if( JavaVersion.current().java7Compatible ) {
        apply plugin: 'com.github.kt3k.coveralls'
        apply plugin: 'com.jfrog.bintray'
        apply from: "$rootDir/gradle/application.gradle"
        apply from: "$rootDir/gradle/signing.gradle"
        apply from: "$rootDir/gradle/maven-publishing.gradle"
        apply from: "$rootDir/gradle/publishing.gradle"
        apply from: "$rootDir/gradle/sdkman.gradle"
    }

    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    repositories {
        jcenter()
    }

    sourceSets {
        smokeTest {
            java {
                srcDir file('src/smoke-test/java')
            }
            resources {
                srcDir file('src/smoke-test/resources')
            }
        }
    }

    configurations {
        dist

        runtime.extendsFrom dist
    }


    dependencies {
        compile group: 'commons-io', name: 'commons-io', version:  commonsIoVersion
        compile group: 'commons-configuration', name: 'commons-configuration', version: commonsConfigurationVersion
        compile group: 'org.apache.commons', name: 'commons-vfs2', version: commonsVfs2Version
        compile group: 'org.apache.commons', name: 'commons-lang3', version: commonsLangVersion
        compile group: 'com.googlecode.json-simple', name: 'json-simple', version: jsonSimpleVersion
        compile group: 'args4j', name: 'args4j', version: args4jVersion
        compile group: 'org.freemarker', name: 'freemarker', version: freemarkerVersion
        compile group: 'com.orientechnologies', name: 'orientdb-graphdb', version: orientDbVersion
        compile group: 'org.asciidoctor', name: 'asciidoctorj', version: asciidoctorjVersion
        compile group: 'org.eclipse.jetty', name: 'jetty-server', version: jettyServerVersion
        compile group: 'org.codehaus.groovy', name: 'groovy', version: groovyVersion
        compile group: 'org.codehaus.groovy', name: 'groovy-templates', version: groovyVersion
        compile group: 'org.thymeleaf', name: 'thymeleaf', version: thymeleafVersion
        compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
        compile group: 'org.slf4j', name: 'jul-to-slf4j', version: slf4jVersion
        compile group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
        compile group: 'ch.qos.logback', name: 'logback-core', version: logbackVersion
        compile group: 'de.neuland-bfi', name: 'jade4j', version: jade4jVersion
        compile group: 'org.jsoup', name:'jsoup', version: jsoupVersion
        compile "com.vladsch.flexmark:flexmark-all:$flexmarkVersion"

        dist group: 'org.asciidoctor', name: 'asciidoctorj-diagram', version: asciidoctorjDiagramVersion

        testCompile group: 'junit', name: 'junit', version: junit4Version
        testCompile group: 'org.assertj', name: 'assertj-core', version: assertjCoreVersion
        testCompile group: 'org.mockito', name: 'mockito-core', version: mockitoVersion

        smokeTestCompile configurations.testCompile
        smokeTestCompile sourceSets.test.output
        smokeTestRuntime configurations.testRuntime

    }

    dependencyUpdates.resolutionStrategy = {
        componentSelection { rules ->
            rules.all { ComponentSelection selection ->
                boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                    selection.candidate.version ==~ /(?i).*[.-]?${qualifier}[.\d-]*/
                }
                if (rejected) {
                    selection.reject('Release candidate')
                }
            }
        }
    }

    test {
        jvmArgs '-Xmx512m', '-XX:MaxPermSize=512m', '-XX:MaxDirectMemorySize=128m', '-Dorientdb.installCustomFormatter=false=false'
    }

    task smokeTest(type: Test, dependsOn: installDist) {
        group 'Verification'
        description 'Runs the integration tests.'
        setTestClassesDirs sourceSets.smokeTest.output.classesDirs
        classpath = sourceSets.smokeTest.runtimeClasspath
        shouldRunAfter test
    }

    check.dependsOn smokeTest

    jacoco {
        toolVersion = jacocoVersion
    }

    jacocoTestReport {
        reports {
            xml.enabled = true // coveralls plugin depends on xml format report
            html.enabled = true
        }
    }

    jacocoTestReport.dependsOn test
}