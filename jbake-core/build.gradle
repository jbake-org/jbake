import java.time.format.DateTimeFormatter

plugins {
    id "org.jbake.convention.java-common"
    id 'java-library'
    id 'nebula.optional-base' version "$optionalBaseVersion"
}

apply from: "$rootDir/gradle/maven-publishing.gradle"

description = "The core library of JBake"

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = "jbake-core"

                licenses {
                    license {
                        name = 'The MIT License (MIT)'
                        url = 'http://opensource.org/licenses/MIT'
                    }
                }
            }
        }
    }
}


dependencies {
    api "commons-io:commons-io:$commonsIoVersion"
    api "org.apache.commons:commons-configuration2:$commonsConfigurationVersion"
    implementation "commons-beanutils:commons-beanutils:$commonsBeanutilsVersion"
    implementation "org.apache.commons:commons-vfs2:$commonsVfs2Version", optional
    implementation "org.apache.commons:commons-lang3:$commonsLangVersion"
    implementation("com.googlecode.json-simple:json-simple:$jsonSimpleVersion") {
        exclude group: "junit", module: "junit"
    }
    implementation "com.arcadedb:arcadedb-engine:$arcadeDbVersion"
    api "org.asciidoctor:asciidoctorj:$asciidoctorjVersion", optional
    api "org.codehaus.groovy:groovy:$groovyVersion", optional
    api "org.codehaus.groovy:groovy-templates:$groovyVersion", optional
    api "org.codehaus.groovy:groovy-dateutil:$groovyVersion", optional
    api "org.freemarker:freemarker:$freemarkerVersion", optional
    api "org.thymeleaf:thymeleaf:$thymeleafVersion", optional
    api "de.neuland-bfi:jade4j:$jade4jVersion", optional
    api "com.vladsch.flexmark:flexmark:$flexmarkVersion", optional
    api "com.vladsch.flexmark:flexmark-profile-pegdown:$flexmarkVersion", optional
    api "io.pebbletemplates:pebble:$pebbleVersion", optional
    implementation "org.jsoup:jsoup:$jsoupVersion"
    implementation "org.yaml:snakeyaml:$snakeYamlVersion", optional

    // cli specific dependencies
    implementation "org.eclipse.jetty:jetty-server:$jettyServerVersion", optional
    implementation "info.picocli:picocli:$picocli", optional
}

processResources {
    from("src/main/resources") {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        include 'default.properties'
        expand jbakeVersion: project.version,
               timestamp: grgit.head().dateTime.format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss'['VV']'")),
               gitHash: grgit.head().abbreviatedId
    }
}
