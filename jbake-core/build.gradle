import java.time.format.DateTimeFormatter

apply from: "$rootDir/gradle/sonarqube.gradle"
apply plugin: 'java-library'


description = "The core library of JBake"

dependencies {
    implementation "commons-io:commons-io:$commonsIoVersion"
    implementation "org.apache.commons:commons-configuration2:$commonsConfigurationVersion"
    implementation "commons-beanutils:commons-beanutils:$commonsBeanutilsVersion"
    implementation "org.apache.commons:commons-vfs2:$commonsVfs2Version", optional
    implementation "org.apache.commons:commons-lang3:$commonsLangVersion"
    implementation("com.googlecode.json-simple:json-simple:$jsonSimpleVersion") {
        exclude group: "junit", module: "junit"
    }
    implementation "com.orientechnologies:orientdb-core:$orientDbVersion"
    implementation "org.asciidoctor:asciidoctorj:$asciidoctorjVersion", optional
    implementation "org.codehaus.groovy:groovy:$groovyVersion", optional
    implementation "org.codehaus.groovy:groovy-templates:$groovyVersion", optional
    implementation "org.codehaus.groovy:groovy-dateutil:$groovyVersion", optional
    implementation "org.freemarker:freemarker:$freemarkerVersion", optional
    implementation "org.thymeleaf:thymeleaf:$thymeleafVersion", optional
    implementation "de.neuland-bfi:jade4j:$jade4jVersion", optional
    implementation "com.vladsch.flexmark:flexmark:$flexmarkVersion", optional
    implementation "com.vladsch.flexmark:flexmark-profile-pegdown:$flexmarkVersion", optional
    implementation "org.jsoup:jsoup:$jsoupVersion"
    implementation "io.pebbletemplates:pebble:$pebbleVersion", optional
    implementation "org.yaml:snakeyaml:$snakeYamlVersion", optional

    // cli specific dependencies
    implementation "org.eclipse.jetty:jetty-server:$jettyServerVersion", optional
    implementation "info.picocli:picocli:$picocli", optional
}

processResources {
    from("src/main/resources") {
        include 'default.properties'
        duplicatesStrategy DuplicatesStrategy.EXCLUDE
        expand jbakeVersion: project.version,
               timestamp: grgit.head().dateTime.format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss'['VV']'")),
               gitHash: grgit.head().abbreviatedId
    }
}
