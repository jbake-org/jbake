# application version
version=v${project.version}
# build timestamp
build.timestamp=${timestamp} 
# path to destination folder by default
destination.folder=output
# folder that contains all template files
template.folder=templates
# filename of masterindex template file
template.masterindex.file=index.ftl
# filename of feed template file
template.feed.file=feed.ftl
# filename of archive template file
template.archive.file=archive.ftl
# filename of tag template file
template.tag.file=tags.ftl
# filename of sitemap template file
template.sitemap.file=sitemap.ftl
# filename of post template file
template.post.file=post.ftl
# filename of page template file
template.page.file=page.ftl
# filename of page template file
template.category.file=category.ftl
# file name of page template for {site.url}/categories
template.categories.file=categories.ftl
# folder that contains all content files
content.folder=content
# folder that contains all asset files
asset.folder=assets
# render index file?
render.index=true
# filename to use for index file
index.file=index.html
# render feed file?
render.feed=true
# character encoding MIME name used for rendering.
# use one of http://www.iana.org/assignments/character-sets/character-sets.xhtml
render.encoding=UTF-8
# character encoding MIME name used in templates.
# use one of http://www.iana.org/assignments/character-sets/character-sets.xhtml
template.encoding=UTF-8
# filename to use for feed
feed.file=feed.xml
# render archive file?
render.archive=true
# filename to use for archive file
archive.file=archive.html
# render sitemap.xml file?
render.sitemap=false
# filename to use for sitemap file
sitemap.file=sitemap.xml
# render tag files?
render.tags=true
# folder name to use for tag files
tag.path=tags
# sanitize tag value before it is used as filename (i.e. replace spaces with hyphens)
tag.sanitize=false 
# file extension for output content files
output.extension=.html
# draft content suffix
draft.suffix=-draft
# default server port
server.port=8820
# zip file containing example project structure using freemarker templates
example.project.freemarker=example_project_freemarker.zip
# zip file containing example project structure using groovy templates
example.project.groovy=example_project_groovy.zip
# zip file containing example project structure using thymeleaf templates
example.project.thymeleaf=example_project_thymeleaf.zip
# zip file containing example project structure using jade templates
example.project.jade=example_project_jade.zip
# default asciidoctor options
asciidoctor.attributes=source-highlighter=prettify
# should JBake config options be exported to Asciidoctor engine?
#asciidoctor.attributes.export=false
# prefix that should be used when JBake config options are exported
#asciidoctor.attributes.export.prefix=
# default date format used in content files
date.format=yyyy-MM-dd
# default status
#default.status=published
# comma delimited default markdown extensions; for available extensions:
# http://www.decodified.com/pegdown/api/org/pegdown/Extensions.html
markdown.extensions=HARDWRAPS,AUTOLINKS,FENCED_CODE_BLOCKS,DEFINITIONS
# millis to parse single markdown page. See PegDown Parse configuration for details
markdown.maxParsingTimeInMillis=2000
# database store (local, memory)
db.store=memory
# database path
db.path=cache
# enable extension-less URI option?
uri.noExtension=false
# Set to a prefix path (starting with a slash) for which to generate extension-less URI's (i.e. a folder with index.html in)
uri.noExtension.prefix=
#Enable usage of categories. If disabled then nothing related to categories is processed or generated.
categories.enable=true
# Should categories pages be genetated
render.categories=true
#What should be the default category when no categories are specified for post and categories are enabled.
category.default=Uncategorized
# where to generate category pages
categories.path=categories
# Should spaces be replaced with hyphens 
categories.sanitize=false

